# Copyright (c) 2024 Dell Inc., or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0

# This workflow is used to release libraries like gobrick, gofsutil etc.
name: Release Libs

# Invocable as a reusable workflow
on:
  workflow_call:
env:
  new_tag: none

jobs:
  build-and-scan:
    name: Build,Scan and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      # - name: Set up Go
      #   uses: actions/setup-go@v5
      #   with:
      #     go-version: '1.23'
      # - name: Install dependencies
      #   run: go mod tidy
      # - name: Build
      #   run: go build -v ./...
      # - name: Run malware scan
      #   uses: dell/common-github-actions/malware-scanner@reusuable-release-workflow
      #   with:
      #     directories: .
      #     options: -ri          

      - name: Get latest tag
        id: get_latest_tag
        run: |
            latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "none")
            echo "latest_tag=$latest_tag" >> $GITHUB_ENV
      
      - name: Increment tag
        id: increment_tag
        run: |          
          if [ "$latest_tag" = "none" ]; then
            new_tag="v1.0.0"
          else
            IFS='.' read -r -a parts <<< "${latest_tag#v}"
            major=${parts}
            minor=${parts}
            patch=${parts}
            new_tag="v$major.$minor.$((patch+1))"
          fi
          echo "new_tag=$new_tag" >> $GITHUB_ENV
      
      - name: Create new tag
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git tag ${{ env.new_tag }}
          git push origin ${{ env.new_tag }}

      - name: Create GitHub release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.new_tag }}
          release_name: Release ${{ env.new_tag }}
          draft: false
          prerelease: false
          body: |
            ## Changes
            - Describe your changes here
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Create release branch
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git checkout -b release/v${{ github.event.inputs.version }}
          git push origin release/v${{ github.event.inputs.version }}
