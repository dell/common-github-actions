
# Copyright (c) 2024 Dell Inc., or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0

# Reusable workflow to perform staic analysis on Golang based projects
name: Golang Static Analysis

# Invocable as a reusable workflow
on:
  workflow_call:

# permissions required for this workflow
permissions:
  contents: read

# environment variables common across all jobs
env:
  WF_ORG: dell
  WF_REPO: common-github-actions
  WF_CONFIGS: .github/configs
  WF_CONFIGS_BRANCH: main

# Various jobs
jobs:

  # Lints code with golangci-lint (config is in .github/config/golangci-lint/golangci.yaml)
  # Enabled linters include: lint, vet, fmt, gosec
  golangci-lint:
    name: Lint golang code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: "1.23.2"
          cache: false
      - name: Checkout the code
        uses: actions/checkout@v4
      - name: Grab golangci-lint config file
        continue-on-error: true
        run: |
          export CONFIG="$WF_ORG/$WF_REPO/$WF_CONFIGS_BRANCH/$WF_CONFIGS/golangci-lint/golangci.yaml"
          echo "Grabbing config file from: https://raw.githubusercontent.com/$CONFIG"
          curl -O -f https://raw.githubusercontent.com/$CONFIG
      - name: Vendor packages
        run: |
          go mod vendor
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          skip-cache: true
          args: --config=golangci.yaml

  # Check sources files for malware
  malware_security_scan:
    name: Malware Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - name: Run malware scan
        uses: dell/common-github-actions/malware-scanner@main
        with:
          directories: .
          options: -ri

  # Check yaml for syntax validity, line length, trailing spaces, indentation, etc.
  yaml_lint_scan:
    name: Yaml Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install yamllint
        run: |
          pip install yamllint
      - name: Grab yamllint config file
        continue-on-error: true
        run: |
          export CONFIG="$WF_ORG/$WF_REPO/$WF_CONFIGS_BRANCH/$WF_CONFIGS/yamllint/yamllint.yaml"
          echo "Grabbing Yaml config file from: https://raw.githubusercontent.com/$CONFIG"
          curl -O -f https://raw.githubusercontent.com/$CONFIG
      - name: Run yamllint
        run: |
          if [ -f yamllint.yaml ]; then
            yamllint -c yamllint.yaml .
          else
            echo "No Yamllint config file found, running with defaults"
            yamllint .
          fi
